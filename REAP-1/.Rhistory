dt.ci$LCL <- dt.ci$value-dt.ci$ci
dt.ci$UCL <- dt.ci$value+dt.ci$ci
dt.ci <- dt.ci %>% mutate(LCL_l = ifelse(LCL < 0, value - 0, NA), UCL_l = ifelse(UCL > 1, 1 - value, NA))
dt.ci
ggplot() +
geom_point(aes(x=dt.ci$Auranofin, y=dt.ci$value, color=dt.ci$variable)) +
geom_line(aes(x = dt.pred[,1], y = dt.pred[,2], color=dt.pred[,3])) +
geom_errorbar(aes(x=dt.ci$Auranofin,ymin=dt.ci$LCL, ymax=dt.ci$UCL, color=dt.ci$variable), width=.1, position=position_dodge(.5)) +
xlab(nms[1]) + ylab(nms[2]) +
labs(color=nms[3], shape=nms[3])
ggplot() +
geom_point(aes(x=dt.ci$Auranofin, y=dt.ci$value, color=dt.ci$variable)) +
geom_line(aes(x = dt.pred[,1], y = dt.pred[,2], color=dt.pred[,3])) +
geom_errorbar(aes(x=dt.ci$Auranofin,ymin=dt.ci$LCL, ymax=dt.ci$UCL, color=dt.ci$variable), width=.1) +
xlab(nms[1]) + ylab(nms[2]) +
labs(color=nms[3], shape=nms[3])
ggplot(myData_m, aes(x=formN, y=ALPHA, colour=Cat)) +
geom_errorbar(aes(ymin=LCL, ymax=UCL), width=.4, position=position_dodge(.5)) +
geom_point(position=position_dodge(.5), size=2) +
labs(x="Form", y="Alpha", title="TITLE") +
geom_line(position=position_dodge(.5), size=.3) +
coord_cartesian(ylim=c(.3, 1)) +
facet_wrap(~grade, ncol=3) +
geom_segment(aes(x = formN - .12, xend = formN - .12, y = ALPHA, yend = ALPHA - LCL_l), arrow = arrow(length = unit(myData_m$LCL_l, "cm")))
ggplot() +
geom_point(aes(x=dt.ci$Auranofin, y=dt.ci$value, color=dt.ci$variable)) +
geom_line(aes(x = dt.pred[,1], y = dt.pred[,2], color=dt.pred[,3])) +
geom_errorbar(aes(x=dt.ci$Auranofin,ymin=dt.ci$LCL, ymax=dt.ci$UCL, color=dt.ci$variable), width=.1) +
xlab(nms[1]) + ylab(nms[2]) +
coord_cartesian(ylim=c(0, 1)) +
labs(color=nms[3], shape=nms[3])
ggplot() +
geom_point(aes(x=dt.ci$Auranofin, y=dt.ci$value, color=dt.ci$variable)) +
geom_line(aes(x = dt.pred[,1], y = dt.pred[,2], color=dt.pred[,3])) +
geom_errorbar(aes(x=dt.ci$Auranofin,ymin=dt.ci$LCL, ymax=dt.ci$UCL, color=dt.ci$variable), width=.1) +
xlab(nms[1]) + ylab(nms[2]) +
coord_cartesian(ylim=c(0, 1)) +
labs(color=nms[3], shape=nms[3])+
geom_segment(aes(x = dt.ci$Auranofin - .12, xend = dt.ci$Auranofin - .12,
y = dt.ci$value, yend = dt.ci$value - LCL_l), arrow = arrow(length = unit(myData_m$LCL_l, "cm")))
dt.ci
ggplot() +
geom_point(aes(x=dt.ci$Auranofin, y=dt.ci$value, color=dt.ci$variable)) +
geom_line(aes(x = dt.pred[,1], y = dt.pred[,2], color=dt.pred[,3])) +
geom_errorbar(aes(x=dt.ci$Auranofin,ymin=dt.ci$LCL, ymax=dt.ci$UCL, color=dt.ci$variable), width=.1) +
xlab(nms[1]) + ylab(nms[2]) +
coord_cartesian(ylim=c(0, 1)) +
labs(color=nms[3], shape=nms[3])+
geom_segment(aes(x = dt.ci$Auranofin - .12, xend = dt.ci$Auranofin - .12,
y = dt.ci$value, yend = dt.ci$value - dt.ci$LCL_l), arrow = arrow(length = unit(dt.ci$LCL_l, "cm")))
myData<-data.frame(ALPHA=round(runif(60,.5,.8),2),
error=round(runif(60,.05,.15),2),
formN=rep(1:5,12),
Cat=c(rep("ELL",30),rep("SWD",30)),
grade=rep(c(rep(3,5),rep(4,5),rep(5,5),rep(6,5),rep(7,5),rep(8,5)),2)
)
myData$LCL<-myData$ALPHA-myData$error
myData$UCL<-myData$ALPHA+myData$error
#set error outside of range for example
myData[myData$Cat=="ELL" & formN==1,"LCL"]<-0
library(dplyr)
myData_m <- myData %>% mutate(LCL_l = ifelse(LCL < .3, ALPHA - .3, NA), UCL_l = ifelse(UCL > 1, 1 - ALPHA, NA))
myData_m
dt.ci
ggplot() +
geom_point(aes(x=dt.ci$Auranofin, y=dt.ci$value, color=dt.ci$variable)) +
geom_line(aes(x = dt.pred[,1], y = dt.pred[,2], color=dt.pred[,3])) +
geom_errorbar(aes(x=dt.ci$Auranofin,ymin=dt.ci$LCL, ymax=dt.ci$UCL, color=dt.ci$variable), width=.1) +
xlab(nms[1]) + ylab(nms[2]) +
coord_cartesian(ylim=c(0, 1)) +
labs(color=nms[3], shape=nms[3])
ggplot() +
geom_point(aes(x=dt.ci$Auranofin, y=dt.ci$value, color=dt.ci$variable)) +
geom_line(aes(x = dt.pred[,1], y = dt.pred[,2], color=dt.pred[,3])) +
geom_errorbar(aes(x=dt.ci$Auranofin,ymin=dt.ci$LCL, ymax=dt.ci$UCL, color=dt.ci$variable), width=.1) +
xlab(nms[1]) + ylab(nms[2])
ggplot() +
geom_point(aes(x=dt.ci$Auranofin, y=dt.ci$value, color=dt.ci$variable)) +
geom_line(aes(x = dt.pred[,1], y = dt.pred[,2], color=dt.pred[,3])) +
geom_errorbar(aes(x=dt.ci$Auranofin,ymin=dt.ci$LCL, ymax=dt.ci$UCL, color=dt.ci$variable), width=.1) +
xlab(nms[1]) + ylab(nms[2]) +
coord_cartesian(ylim=c(0, 1)) +
labs(color=nms[3], shape=nms[3])+
geom_segment(aes(x = dt.ci$Auranofin - .12, xend = dt.ci$Auranofin - .12,
y = dt.ci$value, yend = dt.ci$value - dt.ci$LCL_l), arrow = arrow(length = unit(dt.ci$LCL_l, "cm")))+
geom_segment(aes(x = dt.ci$Auranofin - .12, xend = dt.ci$Auranofin - .12,
y = dt.ci$value, yend = dt.ci$value - dt.ci$UCL_l), arrow = arrow(length = unit(dt.ci$LCL_l, "cm")))
ggplot() +
geom_point(aes(x=dt.ci$Auranofin, y=dt.ci$value, color=dt.ci$variable)) +
geom_line(aes(x = dt.pred[,1], y = dt.pred[,2], color=dt.pred[,3])) +
geom_errorbar(aes(x=dt.ci$Auranofin,ymin=dt.ci$LCL, ymax=dt.ci$UCL, color=dt.ci$variable), width=.1) +
xlab(nms[1]) + ylab(nms[2]) +
coord_cartesian(ylim=c(0, 1)) +
labs(color=nms[3], shape=nms[3])+
geom_segment(aes(x = dt.ci$Auranofin - .12, xend = dt.ci$Auranofin - .12,
y = dt.ci$value, yend = dt.ci$value - dt.ci$LCL_l), arrow = arrow())
ggplot() +
geom_point(aes(x=dt.ci$Auranofin, y=dt.ci$value, color=dt.ci$variable)) +
geom_line(aes(x = dt.pred[,1], y = dt.pred[,2], color=dt.pred[,3])) +
geom_errorbar(aes(x=dt.ci$Auranofin,ymin=dt.ci$LCL, ymax=dt.ci$UCL, color=dt.ci$variable), width=.1) +
xlab(nms[1]) + ylab(nms[2]) +
coord_cartesian(ylim=c(0, 1)) +
labs(color=nms[3], shape=nms[3])+
geom_segment(aes(
y = dt.ci$value, yend = dt.ci$value - dt.ci$LCL_l), arrow = arrow())
ggplot() +
geom_point(aes(x=dt.ci$Auranofin, y=dt.ci$value, color=dt.ci$variable)) +
geom_line(aes(x = dt.pred[,1], y = dt.pred[,2], color=dt.pred[,3])) +
geom_errorbar(aes(x=dt.ci$Auranofin,ymin=dt.ci$LCL, ymax=dt.ci$UCL, color=dt.ci$variable), width=.1) +
xlab(nms[1]) + ylab(nms[2]) +
coord_cartesian(ylim=c(0, 1)) +
labs(color=nms[3], shape=nms[3])+
geom_segment(aes(x = dt.ci$Auranofin, xend = dt.ci$Auranofin,
y = dt.ci$value, yend = dt.ci$value - dt.ci$LCL_l), arrow = arrow())
ggplot() +
geom_point(aes(x=dt.ci$Auranofin, y=dt.ci$value, color=dt.ci$variable)) +
geom_line(aes(x = dt.pred[,1], y = dt.pred[,2], color=dt.pred[,3])) +
geom_errorbar(aes(x=dt.ci$Auranofin,ymin=dt.ci$LCL, ymax=dt.ci$UCL, color=dt.ci$variable), width=.1) +
xlab(nms[1]) + ylab(nms[2]) +
coord_cartesian(ylim=c(0, 1)) +
labs(color=nms[3], shape=nms[3])+
geom_segment(aes(x = dt.ci$Auranofin, xend = dt.ci$Auranofin,
y = dt.ci$value, yend = dt.ci$value - dt.ci$LCL_l), arrow = arrow(length = unit(dt.ci$LCL_l, "cm")))
ggplot() +
geom_point(aes(x=dt.ci$Auranofin, y=dt.ci$value, color=dt.ci$variable)) +
geom_line(aes(x = dt.pred[,1], y = dt.pred[,2], color=dt.pred[,3])) +
geom_errorbar(aes(x=dt.ci$Auranofin,ymin=dt.ci$LCL, ymax=dt.ci$UCL, color=dt.ci$variable), width=.1) +
xlab(nms[1]) + ylab(nms[2]) +
coord_cartesian(ylim=c(0, 1)) +
labs(color=nms[3], shape=nms[3])+
geom_segment(aes(x = dt.ci$Auranofin, xend = dt.ci$Auranofin,
y = dt.ci$value, yend = dt.ci$value - dt.ci$LCL_l), arrow = arrow(),size=1)
ggplot() +
geom_point(aes(x=dt.ci$Auranofin, y=dt.ci$value, color=dt.ci$variable)) +
geom_line(aes(x = dt.pred[,1], y = dt.pred[,2], color=dt.pred[,3])) +
geom_errorbar(aes(x=dt.ci$Auranofin,ymin=dt.ci$LCL, ymax=dt.ci$UCL, color=dt.ci$variable), width=.1) +
xlab(nms[1]) + ylab(nms[2]) + ylim(0,1)
ggplot() +
geom_point(aes(x=dt.ci$Auranofin, y=dt.ci$value, color=dt.ci$variable)) +
geom_line(aes(x = dt.pred[,1], y = dt.pred[,2], color=dt.pred[,3])) +
geom_errorbar(aes(x=dt.ci$Auranofin,ymin=dt.ci$LCL, ymax=dt.ci$UCL, color=dt.ci$variable), width=.1) +
xlab(nms[1]) + ylab(nms[2]) + ylim(0,1) +
# coord_cartesian(ylim=c(0, 1)) +
labs(color=nms[3], shape=nms[3])+
geom_segment(aes(x = dt.ci$Auranofin, xend = dt.ci$Auranofin,
y = dt.ci$value, yend = dt.ci$value - dt.ci$LCL_l), arrow = arrow(),size=1)
ggplot() +
geom_point(aes(x=dt.ci$Auranofin, y=dt.ci$value, color=dt.ci$variable)) +
geom_line(aes(x = dt.pred[,1], y = dt.pred[,2], color=dt.pred[,3])) +
geom_errorbar(aes(x=dt.ci$Auranofin,ymin=dt.ci$LCL, ymax=dt.ci$UCL, color=dt.ci$variable), width=.1) +
xlab(nms[1]) + ylab(nms[2]) +
coord_cartesian(ylim=c(0, 1)) +
labs(color=nms[3], shape=nms[3])+
geom_segment(aes(x = dt.ci$Auranofin, xend = dt.ci$Auranofin,
y = dt.ci$value, yend = dt.ci$value - dt.ci$LCL_l), arrow = arrow(),size=1)
ggplot() +
geom_point(aes(x=dt.ci$Auranofin, y=dt.ci$value, color=dt.ci$variable)) +
geom_line(aes(x = dt.pred[,1], y = dt.pred[,2], color=dt.pred[,3])) +
geom_errorbar(aes(x=dt.ci$Auranofin,ymin=dt.ci$LCL, ymax=dt.ci$UCL, color=dt.ci$variable), width=.1) +
xlab(nms[1]) + ylab(nms[2]) +
coord_cartesian(ylim=c(0, 1)) +
labs(color=nms[3], shape=nms[3])+
geom_segment(aes(x = dt.ci$Auranofin, xend = dt.ci$Auranofin,
y = dt.ci$value, yend = dt.ci$value - dt.ci$LCL_l), arrow = arrow(),size=0.1)+
geom_segment(aes(x = dt.ci$Auranofin - .12, xend = dt.ci$Auranofin - .12,
y = dt.ci$value, yend = dt.ci$value - dt.ci$UCL_l), arrow = arrow(length = unit(dt.ci$LCL_l, "cm")))
ggplot() +
geom_point(aes(x=dt.ci$Auranofin, y=dt.ci$value, color=dt.ci$variable)) +
geom_line(aes(x = dt.pred[,1], y = dt.pred[,2], color=dt.pred[,3])) +
geom_errorbar(aes(x=dt.ci$Auranofin,ymin=dt.ci$LCL, ymax=dt.ci$UCL, color=dt.ci$variable), width=.1) +
xlab(nms[1]) + ylab(nms[2]) +
coord_cartesian(ylim=c(0, 1)) +
labs(color=nms[3], shape=nms[3])+
geom_segment(aes(x = dt.ci$Auranofin, xend = dt.ci$Auranofin,
y = dt.ci$value, yend = dt.ci$value - dt.ci$LCL_l), arrow = arrow(),size=0.1)
ggplot() +
geom_point(aes(x=dt.ci$Auranofin, y=dt.ci$value, color=dt.ci$variable)) +
geom_line(aes(x = dt.pred[,1], y = dt.pred[,2], color=dt.pred[,3])) +
geom_errorbar(aes(x=dt.ci$Auranofin,ymin=dt.ci$LCL, ymax=dt.ci$UCL, color=dt.ci$variable), width=.1) +
xlab(nms[1]) + ylab(nms[2]) +
coord_cartesian(ylim=c(0, 1)) +
labs(color=nms[3], shape=nms[3])+
geom_segment(aes(x = dt.ci$Auranofin, xend = dt.ci$Auranofin,
y = dt.ci$value, yend = dt.ci$value - dt.ci$LCL_l), arrow = arrow(),size=0.5)+
geom_segment(aes(x = dt.ci$Auranofin, xend = dt.ci$Auranofin,
y = dt.ci$value, yend = dt.ci$value - dt.ci$UCL_l), arrow = arrow(length = unit(dt.ci$LCL_l, "cm")))
runApp('Downloads/Github/robust-dose-response/RobustDoseResponse')
shiny::runApp('Downloads/Github/robust-dose-response/RobustDoseResponse')
runApp('Downloads/Github/robust-dose-response/RobustDoseResponse')
runApp('Downloads/Github/robust-dose-response/RobustDoseResponse')
runApp('Downloads/Github/robust-dose-response/RobustDoseResponse')
ggplot() +
geom_point(aes(x=log(dt.ci$Auranofin), y=logit(dt.ci$value), color=dt.ci$variable)) +
geom_line(aes(x = log(dt.pred[,1]), y = logit(dt.pred[,2]), color=dt.pred[,3])) +
geom_errorbar(aes(x=log(dt.ci$Auranofin),ymin=logit(dt.ci$value-dt.ci$ci), ymax=logit(dt.ci$value+dt.ci$ci), color=dt.ci$variable), width=.1) +
xlab(nms[1]) + ylab(nms[2]) +
labs(color=nms[3], shape=nms[3])
dt <- read.csv("~/Desktop/Shiny/31780660_F1A.csv")
nms <- colnames(dt)
n = length(unique(dt[,3]))
beta.fit = c()
for (i in 1:n){
d.dt <- subset(dt, dt[,3] == as.character(unique(dt[,3]))[i])
nms.dt <- colnames(d.dt)
fcn <- as.formula(paste(nms.dt[2], "~log(",nms.dt[1],")"))
d.betareg <- betareg(fcn, data = d.dt)
beta.fit[[i]] = d.betareg
}
dose.dt <- as.data.frame(seq(min(dt[,1]), max(dt[,1]), length.out=100))
colnames(dose.dt) <- nms[1]
beta.pred <- c()
for (i in 1:n){beta.pred <- c(beta.pred, predict(beta.fit[[i]], dose.dt))}
dt.pred <- as.data.frame(rep(dose.dt[,1],n))
colnames(dt.pred) <- nms[1]
dt.pred[,nms[2]] <- beta.pred
agentnames <- as.character(unique(dt[,3]))
dt.pred[,nms[3]] <- rep(agentnames, each=100) # Prediction dataset is set up
dt.ci <- summarySE(dt, measurevar="value", groupvars=c("Auranofin","variable"))
dt.ci$LCL <- dt.ci$value-dt.ci$ci
dt.ci$UCL <- dt.ci$value+dt.ci$ci
ggplot() +
geom_point(aes(x=dt.ci$Auranofin, y=dt.ci$value, color=dt.ci$variable)) +
geom_line(aes(x = dt.pred[,1], y = dt.pred[,2], color=dt.pred[,3])) +
geom_errorbar(aes(x=dt.ci$Auranofin,ymin=dt.ci$LCL, ymax=dt.ci$UCL, color=dt.ci$variable), width=.1) +
xlab(nms[1]) + ylab(nms[2]) +
labs(color=nms[3], shape=nms[3])
ggplot() +
geom_point(aes(x=log(dt.ci$Auranofin), y=logit(dt.ci$value), color=dt.ci$variable)) +
geom_line(aes(x = log(dt.pred[,1]), y = logit(dt.pred[,2]), color=dt.pred[,3])) +
geom_errorbar(aes(x=log(dt.ci$Auranofin),ymin=logit(dt.ci$value-dt.ci$ci), ymax=logit(dt.ci$value+dt.ci$ci), color=dt.ci$variable), width=.1) +
xlab(nms[1]) + ylab(nms[2]) +
labs(color=nms[3], shape=nms[3])
paste("log(",nms[1],")")
cat(paste("log(",nms[1],")"))
cats(paste("log(",nms[1],")"))
gsub(" ", "", paste("log(",nms[1],")"))
ggplot() +
geom_point(aes(x=log(dt.ci$Auranofin), y=logit(dt.ci$value), color=dt.ci$variable)) +
geom_line(aes(x = log(dt.pred[,1]), y = logit(dt.pred[,2]), color=dt.pred[,3])) +
geom_errorbar(aes(x=log(dt.ci$Auranofin),ymin=logit(dt.ci$value-dt.ci$ci), ymax=logit(dt.ci$value+dt.ci$ci), color=dt.ci$variable), width=.1) +
xlab(gsub(" ", "", paste("log(",nms[1],")"))) +
ylab(gsub(" ", "", paste("log(",nms[2],")"))) +
labs(color=nms[3], shape=nms[3])
ggplot() +
geom_point(aes(x=log(dt.ci$Auranofin), y=logit(dt.ci$value), color=dt.ci$variable)) +
geom_line(aes(x = log(dt.pred[,1]), y = logit(dt.pred[,2]), color=dt.pred[,3])) +
geom_errorbar(aes(x=log(dt.ci$Auranofin),ymin=logit(dt.ci$value-dt.ci$ci), ymax=logit(dt.ci$value+dt.ci$ci), color=dt.ci$variable), width=.1) +
xlab(gsub(" ", "", paste("log(",nms[1],")"))) +
ylab(gsub(" ", "", paste("logit(",nms[2],")"))) +
labs(color=nms[3], shape=nms[3])
ggplot() +
geom_point(aes(x=log(dt.ci$Auranofin), y=dt.ci$value, color=dt.ci$variable)) +
geom_line(aes(x = log(dt.pred[,1]), y = dt.pred[,2], color=dt.pred[,3])) +
geom_errorbar(aes(x=log(dt.ci$Auranofin),ymin=dt.ci$value-dt.ci$ci, ymax=dt.ci$value+dt.ci$ci, color=dt.ci$variable), width=.1) +
xlab(gsub(" ", "", paste("log(",nms[1],")"))) +
ylab(gsub(" ", "", paste("logit(",nms[2],")"))) +
labs(color=nms[3], shape=nms[3])
ggplot() +
geom_point(aes(x=log(dt.ci$Auranofin), y=dt.ci$value, color=dt.ci$variable)) +
geom_line(aes(x = log(dt.pred[,1]), y = dt.pred[,2], color=dt.pred[,3])) +
geom_errorbar(aes(x=log(dt.ci$Auranofin),ymin=dt.ci$value-dt.ci$ci, ymax=dt.ci$value+dt.ci$ci, color=dt.ci$variable), width=.1) +
xlab(gsub(" ", "", paste("log(",nms[1],")"))) +
ylab(nms[2]) +
labs(color=nms[3], shape=nms[3])
ggplot() +
geom_point(aes(x=log(dt.ci$Auranofin), y=dt.ci$value, color=dt.ci$variable)) +
geom_line(aes(x = log(dt.pred[,1]), y = dt.pred[,2], color=dt.pred[,3])) +
geom_errorbar(aes(x=log(dt.ci$Auranofin),ymin=dt.ci$value-dt.ci$ci, ymax=dt.ci$value+dt.ci$ci, color=dt.ci$variable), width=.1) +
xlab(gsub(" ", "", paste("log(",nms[1],")"))) +
ylab(nms[2]) +coord_cartesian(ylim=c(0, 1)) +
labs(color=nms[3], shape=nms[3])
runApp('Downloads/Github/robust-dose-response/RobustDoseResponse')
runApp('Downloads/Github/robust-dose-response/RobustDoseResponse')
runApp('Downloads/Github/robust-dose-response/RobustDoseResponse')
runApp('Downloads/Github/robust-dose-response/RobustDoseResponse')
dt <- read.csv("~/Desktop/Shiny/31068440_S8.csv")
nms <- colnames(dt)
n = length(unique(dt[,3]))
beta.fit = c()
for (i in 1:n){
d.dt <- subset(dt, dt[,3] == as.character(unique(dt[,3]))[i])
nms.dt <- colnames(d.dt)
fcn <- as.formula(paste(nms.dt[2], "~log(",nms.dt[1],")"))
d.betareg <- betareg(fcn, data = d.dt)
beta.fit[[i]] = d.betareg
}
dose.dt <- as.data.frame(seq(min(dt[,1]), max(dt[,1]), length.out=100))
colnames(dose.dt) <- nms[1]
beta.pred <- c()
for (i in 1:n){beta.pred <- c(beta.pred, predict(beta.fit[[i]], dose.dt))}
dt.pred <- as.data.frame(rep(dose.dt[,1],n))
colnames(dt.pred) <- nms[1]
dt.pred[,nms[2]] <- beta.pred
agentnames <- as.character(unique(dt[,3]))
dt.pred[,nms[3]] <- rep(agentnames, each=100) # Prediction dataset is set up
dt.ci <- summarySE(dt, measurevar="value", groupvars=c("Auranofin","variable"))
dt.ci$LCL <- dt.ci$value-dt.ci$ci
dt.ci$UCL <- dt.ci$value+dt.ci$ci
ggplot() +
geom_point(aes(x=dt.ci$Auranofin, y=dt.ci$value, color=dt.ci$variable)) +
geom_line(aes(x = dt.pred[,1], y = dt.pred[,2], color=dt.pred[,3])) +
geom_errorbar(aes(x=dt.ci$Auranofin,ymin=dt.ci$LCL, ymax=dt.ci$UCL, color=dt.ci$variable), width=.1) +
xlab(nms[1]) + ylab(nms[2]) +
labs(color=nms[3], shape=nms[3])
ggplot() +
geom_point(aes(x=log(dt.ci$Auranofin), y=dt.ci$value, color=dt.ci$variable)) +
geom_line(aes(x = log(dt.pred[,1]), y = dt.pred[,2], color=dt.pred[,3])) +
geom_errorbar(aes(x=log(dt.ci$Auranofin),ymin=dt.ci$value-dt.ci$ci, ymax=dt.ci$value+dt.ci$ci, color=dt.ci$variable), width=.1) +
xlab(gsub(" ", "", paste("log(",nms[1],")"))) +
ylab(nms[2]) +coord_cartesian(ylim=c(0, 1)) +
labs(color=nms[3], shape=nms[3])
runApp('Downloads/Github/robust-dose-response/RobustDoseResponse')
ggplot() +
geom_point(aes(x=dt.ci$Auranofin, y=dt.ci$value, color=dt.ci$variable)) +
geom_line(aes(x = dt.pred[,1], y = dt.pred[,2], color=dt.pred[,3])) +
geom_errorbar(aes(x=dt.ci$Auranofin,ymin=dt.ci$LCL, ymax=dt.ci$UCL, color=dt.ci$variable), width=.1) +
xlab(nms[1]) + ylab(nms[2]) +
labs(color=nms[3], shape=nms[3])
dt <- read.csv("~/Desktop/Shiny/31068440_S8.csv")
nms <- colnames(dt)
n = length(unique(dt[,3]))
beta.fit = c()
for (i in 1:n){
d.dt <- subset(dt, dt[,3] == as.character(unique(dt[,3]))[i])
nms.dt <- colnames(d.dt)
fcn <- as.formula(paste(nms.dt[2], "~log(",nms.dt[1],")"))
d.betareg <- betareg(fcn, data = d.dt)
beta.fit[[i]] = d.betareg
}
dose.dt <- as.data.frame(seq(min(dt[,1]), max(dt[,1]), length.out=100))
colnames(dose.dt) <- nms[1]
beta.pred <- c()
for (i in 1:n){beta.pred <- c(beta.pred, predict(beta.fit[[i]], dose.dt))}
dt.pred <- as.data.frame(rep(dose.dt[,1],n))
colnames(dt.pred) <- nms[1]
dt.pred[,nms[2]] <- beta.pred
agentnames <- as.character(unique(dt[,3]))
dt.pred[,nms[3]] <- rep(agentnames, each=100) # Prediction dataset is set up
dt.ci <- summarySE(dt, measurevar="value", groupvars=c("Auranofin","variable"))
ggplot() +
geom_point(aes(x=dt.ci$Auranofin, y=dt.ci$value, color=dt.ci$variable)) +
geom_line(aes(x = dt.pred[,1], y = dt.pred[,2], color=dt.pred[,3])) +
geom_errorbar(aes(x=dt.ci$Auranofin,ymin=dt.ci$LCL, ymax=dt.ci$UCL, color=dt.ci$variable), width=.1) +
xlab(nms[1]) + ylab(nms[2]) +
labs(color=nms[3], shape=nms[3])
ggplot() +
geom_point(aes(x=dt.ci[,nms[1]], y=dt.ci[,nms[2]], color=dt.ci[,nms[3]])) +
geom_line(aes(x = dt.pred[,1], y = dt.pred[,2], color=dt.pred[,3])) +
geom_errorbar(aes(x=dt.ci[,1],ymin=dt.ci[,nms[2]]-dt.ci$ci, ymax=dt.ci[,nms[2]]+dt.ci$ci,
color=dt.ci[,nms[3]]), width=input$width) +
xlab(nms[1]) + ylab(nms[2]) + coord_cartesian(ylim=c(0, 1)) +
labs(color=nms[3], shape=nms[3])
ggplot() +
geom_point(aes(x=dt.ci[,nms[1]], y=dt.ci[,nms[2]], color=dt.ci[,nms[3]])) +
geom_line(aes(x = dt.pred[,1], y = dt.pred[,2], color=dt.pred[,3])) +
geom_errorbar(aes(x=dt.ci[,1],ymin=dt.ci[,nms[2]]-dt.ci$ci, ymax=dt.ci[,nms[2]]+dt.ci$ci,
color=dt.ci[,nms[3]])) +
xlab(nms[1]) + ylab(nms[2]) + coord_cartesian(ylim=c(0, 1)) +
labs(color=nms[3], shape=nms[3])
ggplot() +
geom_point(aes(x=dt.ci[,nms[1]], y=dt.ci[,nms[2]], color=dt.ci[,nms[3]])) +
geom_line(aes(x = dt.pred[,1], y = dt.pred[,2], color=dt.pred[,3]))
nms[1]
dt.ci
dt <- read.csv("~/Desktop/Shiny/31068440_S8.csv")
nms <- colnames(dt)
n = length(unique(dt[,3]))
beta.fit = c()
for (i in 1:n){
d.dt <- subset(dt, dt[,3] == as.character(unique(dt[,3]))[i])
nms.dt <- colnames(d.dt)
fcn <- as.formula(paste(nms.dt[2], "~log(",nms.dt[1],")"))
d.betareg <- betareg(fcn, data = d.dt)
beta.fit[[i]] = d.betareg
}
dose.dt <- as.data.frame(seq(min(dt[,1]), max(dt[,1]), length.out=100))
colnames(dose.dt) <- nms[1]
dose.dt
beta.pred <- c()
for (i in 1:n){beta.pred <- c(beta.pred, predict(beta.fit[[i]], dose.dt))}
dt.pred <- as.data.frame(rep(dose.dt[,1],n))
colnames(dt.pred) <- nms[1]
dt.pred[,nms[2]] <- beta.pred
agentnames <- as.character(unique(dt[,3]))
dt.pred[,nms[3]] <- rep(agentnames, each=100) # Prediction dataset is set up
dt.ci <- summarySE(dt, measurevar="value", groupvars=c("Rotenone","variable"))
dt.ci
ggplot() +
geom_point(aes(x=dt.ci[,nms[1]], y=dt.ci[,nms[2]], color=dt.ci[,nms[3]])) +
geom_line(aes(x = dt.pred[,1], y = dt.pred[,2], color=dt.pred[,3])) +
geom_errorbar(aes(x=dt.ci[,1],ymin=dt.ci[,nms[2]]-dt.ci$ci, ymax=dt.ci[,nms[2]]+dt.ci$ci,
color=dt.ci[,nms[3]])) +
xlab(nms[1]) + ylab(nms[2]) + coord_cartesian(ylim=c(0, 1)) +
labs(color=nms[3], shape=nms[3])
ggplot() +
geom_point(aes(x=log(dt.ci$Auranofin), y=dt.ci$value, color=dt.ci$variable)) +
geom_line(aes(x = log(dt.pred[,1]), y = dt.pred[,2], color=dt.pred[,3])) +
geom_errorbar(aes(x=log(dt.ci$Auranofin),ymin=dt.ci$value-dt.ci$ci, ymax=dt.ci$value+dt.ci$ci, color=dt.ci$variable), width=.1) +
xlab(gsub(" ", "", paste("log(",nms[1],")"))) +
ylab(nms[2]) +coord_cartesian(ylim=c(0, 1)) +
labs(color=nms[3], shape=nms[3])
runApp('Downloads/Github/robust-dose-response/RobustDoseResponse')
beta.fit
summary(beta.fit[[1]])
sum=summary(beta.fit[[1]])
sum$coefficients
sum$coefficients$mean[2,4]
round(sum$coefficients$mean[2,4],3)
signif(sum$coefficients$mean[2,4],3)
signif(0.20987,3)
signif(0.20987,4)
signif(sum$coefficients$mean[2,4],4)
sum$coefficients$mean[1,2]
fit.betareg = beta.fit[[1]]
deltamethod
deltamethod(~-x1/x2, coef(fit.betareg)[1:2],vcov(fit.betareg)[1:2,1:2])
summary(fit.betareg)
summary(fit.betareg)
pnorm(-4.109/0.07110)
-4.109/0.07110
z = -4.109/0.07110
pnorm(z, lower.tail = FALSE)
-0.29214/0.07110
pnorm(-4.109)
2*pnorm(-4.109)
runApp('Downloads/Github/robust-dose-response/RobustDoseResponse')
runApp('Downloads/Github/robust-dose-response/RobustDoseResponse')
runApp('Downloads/Github/robust-dose-response/RobustDoseResponse')
runApp('Downloads/Github/robust-dose-response/RobustDoseResponse')
runApp('Downloads/Github/robust-dose-response/RobustDoseResponse')
-5.453/0.434
2*pnorm(-5.453/0.434	)
signif(2*pnorm(-5.453/0.434	),4)
runApp('Downloads/Github/robust-dose-response/RobustDoseResponse')
2*pnorm(-2.389/0.442)
runApp('Downloads/Github/robust-dose-response/RobustDoseResponse')
runApp('Downloads/Github/robust-dose-response/RobustDoseResponse')
runApp('Downloads/Github/robust-dose-response/RobustDoseResponse')
runApp('Downloads/Github/robust-dose-response/RobustDoseResponse')
beta.slope.pval
ic50.pval
ic50.z
2*pnorm(40.513591)
2*pnorm(-40.513591)
runApp('Downloads/Github/robust-dose-response/RobustDoseResponse')
runApp('Downloads/Github/robust-dose-response/RobustDoseResponse')
runApp('Downloads/Github/robust-dose-response/RobustDoseResponse')
format(0.048, digits=3)
runApp('Downloads/Github/robust-dose-response/RobustDoseResponse')
runApp('Downloads/Github/robust-dose-response/RobustDoseResponse')
runApp('Downloads/Github/robust-dose-response/RobustDoseResponse')
runApp('Downloads/Github/robust-dose-response/RobustDoseResponse')
runApp('Downloads/Github/robust-dose-response/RobustDoseResponse')
remotes::install_github("csdaw/ggprism")
??el_def
dt.pred
nms
n
df01 <- data.frame(nms[1]=rep(0,n))
df01 <- data.frame(a=rep(0,n))
df01 <- data.frame(rep(0,n),rep(1,n),nms)
nms
df01 <- data.frame(rep(0,n),rep(1,n),unique(dt.pred[,3]))
df01
colnames(df01) <- nms
df01
runApp('Downloads/Github/robust-dose-response/RobustDoseResponse')
runApp('Downloads/Github/robust-dose-response/RobustDoseResponse')
dt <- read.csv("~/Desktop/Shiny/mixlowshiny_tr1.csv")
nms <- colnames(dt)
n = length(unique(dt[,3]))
beta.fit = c()
for (i in 1:n){
d.dt <- subset(dt, dt[,3] == as.character(unique(dt[,3]))[i])
nms.dt <- colnames(d.dt)
fcn <- as.formula(paste(nms.dt[2], "~log(",nms.dt[1],")"))
d.betareg <- betareg(fcn, data = d.dt)
beta.fit[[i]] = d.betareg
}
dose.dt <- as.data.frame(seq(min(dt[,1]), max(dt[,1]), length.out=100))
colnames(dose.dt) <- nms[1]
beta.pred <- c()
for (i in 1:n){beta.pred <- c(beta.pred, predict(beta.fit[[i]], dose.dt))}
dt.pred <- as.data.frame(rep(dose.dt[,1],n))
colnames(dt.pred) <- nms[1]
dt.pred[,nms[2]] <- beta.pred
agentnames <- as.character(unique(dt[,3]))
dt.pred[,nms[3]] <- rep(agentnames, each=100) # Prediction dataset is set up
dt.ci <- summarySE(dt, measurevar="value", groupvars=c("Rotenone","variable"))
dt
dt.ci <- summarySE(dt, measurevar="Effect", groupvars=c("Concentration","Agent"))
df01 <- data.frame(rep(0,n),rep(1,n),unique(dt.pred[,3]))
colnames(df01) <- nms
dt.pred <- rbind(dt.pred,df01)
ggplot() +
geom_point(aes(x=dt.ci$Auranofin, y=dt.ci$value, color=dt.ci$variable)) +
geom_line(aes(x = dt.pred[,1], y = dt.pred[,2], color=dt.pred[,3])) +
geom_errorbar(aes(x=dt.ci$Auranofin,ymin=dt.ci$LCL, ymax=dt.ci$UCL, color=dt.ci$variable), width=.1) +
xlab(nms[1]) + ylab(nms[2]) +
labs(color=nms[3], shape=nms[3])
ggplot() +
geom_point(aes(x=dt.ci[,nms[1]], y=dt.ci[,nms[2]], color=dt.ci[,nms[3]])) +
geom_line(aes(x = dt.pred[,1], y = dt.pred[,2], color=dt.pred[,3])) +
geom_errorbar(aes(x=dt.ci[,1],ymin=dt.ci[,nms[2]]-dt.ci$ci, ymax=dt.ci[,nms[2]]+dt.ci$ci,
color=dt.ci[,nms[3]])) +
xlab(nms[1]) + ylab(nms[2]) + coord_cartesian(ylim=c(0, 1)) +
labs(color=nms[3], shape=nms[3])
runApp('Downloads/Github/robust-dose-response/RobustDoseResponse')
runApp('Downloads/Github/robust-dose-response/RobustDoseResponse')
runApp('Downloads/Github/robust-dose-response/RobustDoseResponse')
shiny::runApp('Downloads/Github/robust-dose-response/RobustDoseResponse')
shiny::runApp('Downloads/Github/robust-dose-response/RobustDoseResponse')
